const { MongoClient, ObjectId } = require('mongodb');

const pdb = {
    user: "productManager",
    pass: "UInJRX7m",
    host: "192.168.200.227",
    port: 27017,
    name: "synopsis",
    coll: "product",
};

const oid = [
    "5bab2d3cd78af209a6e22066",
    "5bab2d3cd78af209a6e22067",
    "5bab2d3ed78af209a6e220b1",
    "5bab2d3ed78af209a6e220b8",
    "5bab2d3ed78af209a6e220b9",
    "5bab2d3ed78af209a6e220bd",
    "5bab2d3ed78af209a6e220be",
    "5bab2d3fd78af209a6e220ec",
    "5bab2d40d78af209a6e2210b",
    "5bab2d40d78af209a6e2211b",
    "5bab2d40d78af209a6e22129",
    "5bab2d40d78af209a6e2212a",
    "5bab2d40d78af209a6e2212b",
    "5bab2d40d78af209a6e2212c",
    "5bab2d41d78af209a6e22160",
    "5bab2d41d78af209a6e22167",
    "5bab2d42d78af209a6e22172",
    "5bab2d42d78af209a6e22173",
    "5bab2d42d78af209a6e22174",
    "5bab2d42d78af209a6e22177",
    "5bab2d42d78af209a6e22178",
    "5bab2d42d78af209a6e22179",
    "5bab2d42d78af209a6e2217a",
    "5bab2d42d78af209a6e2217b",
    "5bab2d42d78af209a6e2217c",
    "5bab2d42d78af209a6e2217d",
    "5bab2d43d78af209a6e221b9",
    "5bab2d43d78af209a6e221bc",
    "5bab2d43d78af209a6e221bd",
    "5bab2d44d78af209a6e221bf",
    "5bab2d44d78af209a6e221c0",
    "5bab2d44d78af209a6e221c1",
    "5bab2d44d78af209a6e221c2",
    "5bab2d44d78af209a6e221c4",
    "5bab2d44d78af209a6e221c6",
    "5bab2d44d78af209a6e221d2",
    "5bab2d45d78af209a6e221fc",
    "5bab2d45d78af209a6e221fd",
    "5bab2d45d78af209a6e221ff",
    "5bab2d45d78af209a6e22200",
    "5bab2d45d78af209a6e22206",
    "5bab2d45d78af209a6e22207",
    "5bab2d45d78af209a6e22208",
    "5bab2d45d78af209a6e22209",
    "5bab2d45d78af209a6e2220a",
    "5bab2d45d78af209a6e2220b",
    "5bab2d45d78af209a6e2220c",
    "5bab2d45d78af209a6e2220d",
    "5bab2d46d78af209a6e22249",
    "5bab2d46d78af209a6e2224a",
    "5bab2d46d78af209a6e2224b",
    "5bab2d47d78af209a6e2224f",
    "5bab2d47d78af209a6e22250",
    "5bab2d47d78af209a6e22257",
    "5bab2d47d78af209a6e22258",
    "5bab2d47d78af209a6e22262",
    "5bab2d47d78af209a6e22263",
    "5bab2d47d78af209a6e22264",
    "5bab2d47d78af209a6e22265",
    "5bab2d47d78af209a6e22266",
    "5bab2d47d78af209a6e22267",
    "5bab2d47d78af209a6e22268",
    "5bab2d47d78af209a6e22269",
    "5bab2d48d78af209a6e2228d",
    "5bab2d48d78af209a6e22292",
    "5bab2d48d78af209a6e22293",
    "5bab2d48d78af209a6e22294",
    "5bab2d49d78af209a6e222d8",
    "5bab2d4ad78af209a6e222eb",
    "5bab2d4ad78af209a6e222ec",
    "5bab2d4ad78af209a6e222ed",
    "5bab2d4ad78af209a6e222ee",
    "5bab2d4bd78af209a6e2231a",
    "5bab2d4bd78af209a6e22327",
    "5bab2d4bd78af209a6e22328",
    "5bab2d4bd78af209a6e22329",
    "5bab2d4dd78af209a6e22381",
    "5bab2d4dd78af209a6e22382",
    "5bab2d4dd78af209a6e22383",
    "5bab2d4dd78af209a6e22384",
    "5bab2d4dd78af209a6e22385",
    "5bab2d4dd78af209a6e22386",
    "5bab2d4dd78af209a6e22387",
    "5bab2d4dd78af209a6e22388",
    "5bab2d4dd78af209a6e22389",
    "5bab2d4dd78af209a6e2238a",
    "5bab2d4dd78af209a6e2238b",
    "5bab2d4dd78af209a6e2238c",
    "5bab2d4dd78af209a6e2238d",
    "5bab2d4dd78af209a6e2238e",
    "5bab2d4ed78af209a6e223c4",
    "5bab2d4ed78af209a6e223c5",
    "5bab2d4fd78af209a6e223d1",
    "5bab2d4fd78af209a6e223d2",
    "5bab2d4fd78af209a6e223d3",
    "5bab2d4fd78af209a6e223d4",
    "5bab2d4fd78af209a6e223d5",
    "5bab2d4fd78af209a6e223d6",
    "5bab2d4fd78af209a6e223d7",
    "5bab2d4fd78af209a6e223d8",
    "5bab2d50d78af209a6e22404",
    "5bab2d50d78af209a6e22405",
    "5bab2d50d78af209a6e22406",
    "5bab2d50d78af209a6e2240d",
    "5bab2d50d78af209a6e2240e",
    "5bab2d54d78af209a6e224d8",
    "5bab2d54d78af209a6e224d9",
    "5bab2d56d78af209a6e2252a",
    "5bab2d56d78af209a6e2252b",
    "5bab2d56d78af209a6e2252c",
    "5bab2d57d78af209a6e22553",
    "5bab2d5ad78af209a6e225db",
    "5bab2d5ad78af209a6e225ee",
    "5bab2d5ad78af209a6e225ef",
    "5bab2d5ad78af209a6e225f0",
    "5bab2d5ad78af209a6e225f1",
    "5bab2d5ad78af209a6e225f2",
    "5bab2d5ad78af209a6e225f3",
    "5bab2d5ad78af209a6e225f4",
    "5bab2d5bd78af209a6e2261f",
    "5bab2d5bd78af209a6e22620",
    "5bab2d5cd78af209a6e2263b",
    "5bab2d5cd78af209a6e2263c",
    "5bab2d5ed78af209a6e22693",
    "5bab2d5ed78af209a6e22694",
    "5bab2d5ed78af209a6e22695",
    "5bab2d5ed78af209a6e2269c",
    "5bab2d5ed78af209a6e2269d",
    "5bab2d5ed78af209a6e2269e",
    "5bab2d5ed78af209a6e2269f",
    "5bab2d5ed78af209a6e226a1",
    "5bab2d5ed78af209a6e226a2",
    "5bab2d5ed78af209a6e226a3",
    "5bab2d5ed78af209a6e226a4",
    "5bab2d5ed78af209a6e226a5",
    "5bab2d5ed78af209a6e226a6",
    "5bab2d5ed78af209a6e226a7",
    "5bab2d5ed78af209a6e226a8",
    "5bab2d5ed78af209a6e226a9",
    "5bab2d5ed78af209a6e226aa",
    "5bab2d5ed78af209a6e226ab",
    "5bab2d5ed78af209a6e226ac",
    "5bab2d5ed78af209a6e226ad",
    "5bab2d5ed78af209a6e226ae",
    "5bab2d5ed78af209a6e226af",
    "5bab2d5ed78af209a6e226b0",
    "5bab2d5ed78af209a6e226b6",
    "5bab2d5fd78af209a6e226b7",
    "5bab2d5fd78af209a6e226b8",
    "5bab2d5fd78af209a6e226b9",
    "5bab2d5fd78af209a6e226ba",
    "5bab2d5fd78af209a6e226bb",
    "5bab2d5fd78af209a6e226bc",
    "5bab2d5fd78af209a6e226bd",
    "5bab2d5fd78af209a6e226be",
    "5bab2d5fd78af209a6e226bf",
    "5bab2d5fd78af209a6e226c0",
    "5bab2d5fd78af209a6e226c1",
    "5bab2d5fd78af209a6e226c2",
    "5bab2d5fd78af209a6e226c3",
    "5bab2d5fd78af209a6e226c4",
    "5bab2d5fd78af209a6e226c5",
    "5bab2d5fd78af209a6e226c6",
    "5bab2d5fd78af209a6e226c7",
    "5bab2d5fd78af209a6e226d5",
    "5bab2d60d78af209a6e226f2",
    "5bab2d60d78af209a6e226f3",
    "5bab2d60d78af209a6e226f4",
    "5bab2d60d78af209a6e226f5",
    "5bab2d60d78af209a6e226f6",
    "5bab2d60d78af209a6e226f7",
    "5bab2d61d78af209a6e22738",
    "5bab2d61d78af209a6e22739",
    "5bab2d61d78af209a6e2273a",
    "5bab2d62d78af209a6e22764",
    "5bab2d62d78af209a6e22765",
    "5bab2d62d78af209a6e22766",
    "5bab2d62d78af209a6e22767",
    "5bab2d62d78af209a6e22768",
    "5bab2d62d78af209a6e22769",
    "5bab2d63d78af209a6e22787",
    "5bab2d66d78af209a6e22817",
    "5bab2d68d78af209a6e22890",
    "5bab2d69d78af209a6e228a2",
    "5bab2d69d78af209a6e228a4",
    "5bab2d6bd78af209a6e2290e",
    "5bab2d6cd78af209a6e2292e",
    "5bab2d6ed78af209a6e2297f",
    "5bab2d6ed78af209a6e22982",
    "5bab2d6ed78af209a6e22991",
    "5bab2d6ed78af209a6e22992",
    "5bab2d6ed78af209a6e2299a",
    "5bab2d6ed78af209a6e2299c",
    "5bab2d6ed78af209a6e2299e",
    "5bab2d6ed78af209a6e229a1",
    "5bab2d6fd78af209a6e229bd",
    "5bab2d6fd78af209a6e229bf",
    "5bab2d6fd78af209a6e229c0",
    "5bab2d6fd78af209a6e229c1",
    "5bab2d6fd78af209a6e229c4",
];

const checkdot = obj => {

}

const pdb_url = `mongodb://${pdb.user}:${pdb.pass}@${pdb.host}:${pdb.port}/${pdb.name}`;
const pconn = await MongoClient.connect(pdb_url, { useNewUrlParser: true, useUnifiedTopology: true, });
const pdb = pconn.db(pdb.name);

(async () => {
    for (let i = 0; i < oid.length; i++) {
        try {
            const p = await pdb.collection(pdb.coll).find({ _id: ObjectId(oid[i]) }).toArray();
            if (p && p.length > 0) {
                console.log(p[0]);
                const np = {};
                Object.keys(p[0]).forEach(k => {
                    let nk = "";
                    if (k.indexOf(".") >= 0) {
                        nk = k.match(/./g, '_');
                    } else nk = k;
                    np[nk] = p[0][k];
                })
                console.log('new : ', np);
            }
        } catch (error) {
            console.log(error);
        }
    }
    console.log();
    console.log();
    console.log('done.....');
})()